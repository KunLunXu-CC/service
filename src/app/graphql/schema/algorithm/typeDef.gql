# 算法
extend type Query {
  algorithms(
    orderBy: OrderBy
    search: AlgorithmSearch
    pagination: Pagination
  ): Algorithms
}

extend type Mutation {
  createAlgorithms(
    body: [AlgorithmFields!]!
    orderBy: OrderBy
    search: AlgorithmSearch
    pagination: Pagination
  ): Algorithms @auth

  removeAlgorithms (
    conds: AlgorithmSearch!
    orderBy: OrderBy
    search: AlgorithmSearch
    pagination: Pagination
  ): Algorithms @auth

  updateAlgorithms (
    conds: AlgorithmSearch!
    body: AlgorithmFields!
    orderBy: OrderBy
    search: AlgorithmSearch
    pagination: Pagination
  ): Algorithms @auth
}

type Algorithms {
  list: [Algorithm]
  change: [Algorithm]
  message: String
  pagination: Pagination
}

type Algorithm {
  content: String
  tags: [Int]

  id: ID
  status: Int
  creator: User @relation
  updater: User @relation
  updateTime: Date
  creationTime: Date
}

input AlgorithmSearch {
  id: ID
  ids: [ID!]
  tags: [Int]
  content: String

  status: [Int]
  creator: ID
  updater: ID
  startUpdateTime: Date
  endUpdateTime: Date
  startCreationTime: Date
  endCreationTime: Date
}

input AlgorithmFields {
  tags: [Int]
  status: Int
  content: String
}
